{"google":"","name":"Cap-rightscale","note":"Don't delete this file! It's used internally to help with page regeneration.","tagline":"Capistrano extension that maps RightScale parameters to Roles","body":"# cap-rightscale\r\n\r\nCapistrano extension that maps RightScale parameters to Roles\r\n[RightScale](http://www.rightscale.com)\r\n\r\n## Installation\r\n\r\nInstall the packages\r\n\r\nFor Debian/Ubuntu:\r\n\r\n```sh\r\n$ apt-get install ruby ruby-dev\r\n$ apt-get install rubygems  # (if not installed)\r\n```\r\n\r\nFor RHEL5 (probably needs the EPEL repository enabled):\r\n\r\n```sh\r\n$ yum install ruby ruby-devel\r\n$ yum install rubygems # (if not installed)\r\n```\r\n\r\nFor MacOSX(MacPorts):\r\n\r\n```sh\r\n$ port install ruby\r\n$ port install rb-rubygems # (if not installed)\r\n```\r\n\r\nInstall the cap-rightscale:\r\n\r\n```sh\r\n$ gem install cap-rightscale\r\n```\r\n\r\n## Settings\r\n\r\nTo prepare, go info the root directory of that project and run capify:\r\n\r\n```sh\r\n$ cd <project_dir>\r\n$ capify .\r\n```\r\n\r\nConfigure Capfile(example deploy.rb):\r\n\r\n```ruby\r\n# config/deploy.rb\r\nrequire 'rubygems'\r\nrequire 'cap-rightscale'\r\nrequire 'cap-rightscale/recipes'\r\n\r\nDEPLOYMENT_ID = 12345       # RightScale Deployment ID\r\nSERVER_ARRAY_ID = 6789      # RightScale ServerArray ID\r\n\r\n# set roles\r\nnickname :web, :name_prefix => \"proxy\", :deployment => DEPLOYMENT_ID\r\nserver_array :app, :array_id => SERVER_ARRAY_ID\r\ntag :dbm, :tags => \"xx_db:role=master\", :deployment => DEPLOYMENT_ID\r\ntag :dbs, :tags => \"xx_db:role=slave\", :deployment => DEPLOYMENT_ID, :no_release => true\r\n```\r\n\r\nPut RightScale API Credential file into `<HOME>/.rsconf/rsapiconfig.yml`\r\n\r\n```yaml\r\n# <HOME>/.rsconf/rsapiconfig.yml\r\nusername: user@example.com\r\npassword: yourpassword\r\naccount: 1\r\n```\r\n\r\nRun testing:\r\n\r\n```sh\r\n$ cap rs:none\r\n```\r\n\r\nFor more help with Capistrano, see this: https://github.com/capistrano/capistrano/wiki\r\n\r\n### Roles\r\n\r\nIn order to define role, RightScale nickname and deployment mappings:\r\n\r\n```ruby\r\nnickname :web, :name_prefix => \"proxy\", :deployment => 12345\r\n# => role :web, [\"proxyXXX\", ... in deployment ID:12345]\r\n```\r\n\r\nServerArray mappings:\r\n\r\n```ruby\r\nserver_array :app, :array_id => 6789, :backup => true\r\n# => role(:app, :backup => true) { [\"apXXX\", ... in serverarray ID:6789] }\r\n```\r\n\r\nMachine tags and deployment mappings:\r\n\r\n```ruby\r\ntag :dbm, :name_prefix => \"db\", :tags => [\"xx_db:env=prod\", \"xx_db:role=master\"], :deployment => 12345, :primary => true\r\n# => role(:dbm, :primary => true) { [\"dbXXX\", ... in deployment ID:12345] }\r\n```\r\n\r\n### RightScale API Credential\r\n\r\nsee the below site:\r\n\r\n[Authentication](http://support.rightscale.com/12-Guides/03-RightScale_API/RightScale_API_Examples/Authentication) - RightScale Cloud Management Support Portal\r\n\r\nYou must authenticate to use the RightScale API, Make sure to set your own login/password(used to login to RightScale dashboard) and account number(the tail end of the Dashboard URL: `Settings > Account`)\r\n\r\nPut Authentication file described in RightScale API credentials into `<HOME>/.rsconf/rsapiconfig.yml`\r\n\r\nOr, You can define filepath:\r\n\r\n```ruby\r\n# config/deploy.rb\r\nset :rs_confpath, \"/project/config/rs_auth.yml\"\r\n```\r\n\r\n### Caches\r\n\r\nThese functions require RightScale api calls, which are slow. On the first call, Write a cache file in the temp directory.\r\nDefault cache lifetime is 86400 seconds(1day) each role.\r\n\r\nmodified cache life time:\r\n\r\n```ruby\r\n# config/deploy.rb\r\nset :rs_lifetime, 86400 * 7  # 1week\r\n```\r\n\r\nThis can be disabled with ENV variable: `RS_CACHE=false`, `set :rs_lifetime 0` OR `rs_disable :use_rs_cache` in the Capfile.\r\n\r\n```sh\r\n$ cap invoke COMMAND='hostname' RS_CACHE=false\r\n```\r\n\r\n```ruby\r\n# disable cache config/deploy.rb\r\nset :rs_lifetime, 0\r\n# the other way\r\nrs_disable :use_rs_cache\r\n```\r\n\r\nConversely, to use cache to infinity with `set :rs_lifetime -1`.\r\n\r\n```ruby\r\n# config/deploy.rb\r\nset :rs_lifetime, -1\r\n```\r\n\r\nCache clear task(needs after modifying the Capfile):\r\n\r\n```sh\r\n$ cap rs:cache:clear\r\n$ cap rs:cc\r\n```\r\n\r\n### Server name to associate with the role\r\n\r\nDefault name is Amazon EC2 local IP address, This can be changed according to the parameter.\r\n\r\nUse EC2 public IP address:\r\n\r\n```ruby\r\n# config/deploy.rb\r\nrs_enable :use_public_ip\r\n```\r\n\r\nUse RightScale nickname(use as name to resolve for host in `/etc/hosts` or dns record entry).\r\nThis takes priority over ip address.\r\nUsing RightScale Nickname, How to DNS hostname for ec2 instances:\r\n* [\"Developing RightScripts - RightScale Cloud Management Support Portal\"](http://support.rightscale.com/12-Guides/Dashboard_Users_Guide/Design/RightScripts/Actions/Developing_RightScripts#Document_your_RightScript_and_its_Inputs)\r\n* [\"Environment Inputs - RightScale Cloud Management Support Portal\"](http://support.rightscale.com/15-References/Lists/List_of_Environment_Inputs#RightScale_%28RS%29.3a)\r\n* [\"HowTo update DNS hostnames automatically for your Amazon EC2 instances | MDLog:/sysadmin\"](http://www.ducea.com/2009/06/01/howto-update-dns-hostnames-automatically-for-your-amazon-ec2-instances/)\r\n\r\n```ruby\r\n# config/deploy.rb\r\nrs_enable :use_nickname         # RightScale nickname\r\nset :rs_domain, \"ec2.int.com\"   # set subdomain managed by your dns server zone(option: default ref `search` in `/etc/resolv.conf`)\r\n\r\n# set domain each role(priority over `set :rs_domain`)\r\nnickname :web, :nickname => \"lb\", :domain => \"ec2.com\"\r\n```\r\n\r\nInstance nickname in Server Array is `<ServerArray name> #number`\r\n\r\n```ruby\r\n# ServerArray name: prod-web\r\nprod-web #1   # <= instance nickname\r\n```\r\n\r\ncap-rightscale replace instance nickname in Server Array to use dns hostname for your dns server. Default format is `\"%d\"(example: web #1 => web1)`.\r\n\r\n\r\nUse `rs_array_number_format` to replace nickname format:\r\n\r\n```ruby\r\n# config/deploy.rb\r\nrs_array_number_format \"%03d\"   # web #1 => web001\r\nrs_array_number_format \"-%d\"    # web #1 => web-1\r\n```\r\n\r\n### Validate\r\n\r\nUsing ping and name resolv, validate host(except invalid host).\r\n\r\n* `rs_enable :validate_echo`: In case you want to except hang-up instance\r\n* `rs_enable :validate_resolv`: In case you want to except host can not be resolved\r\n\r\n```ruby\r\n# config/deploy.rb\r\nrs_enable :validate_echo, :validate_resolv\r\n```\r\n\r\n## nickname\r\n\r\nDefinition:\r\n\r\n`nickname(role, params)`\r\n\r\n### Arguments\r\n\r\n#### role\r\n\r\nCapistrano role paramter(:app, :web, :db)\r\n\r\n#### params\r\n\r\nExample:\r\n\r\n```ruby\r\nnickname :app, :name_prefix => \"ap\", :deployment => 12345, :user => \"www\"\r\nnickname :db, :name_prefix => \"db\", :deployment => 12345, :except_tags => \"xx_db:state=broken\"\r\nnickname :mem, :name_prefix => \"mem\", :deployment => 12345, :except_tags => [\"xx_mem:state=out_of_service\"]\r\n```\r\n\r\n## server_array\r\n\r\nDefinition:\r\n\r\n`server_array(role, params)`\r\n\r\n### Arguments\r\n\r\n#### role\r\n\r\nCapistrano role paramter(:app, :web, :db)\r\n\r\n#### params\r\n\r\nExample:\r\n\r\n```ruby\r\nserver_array :app, :array_id => 6789, :user => \"www\"\r\nserver_array :mem, :array_id => 4321, :except_tags => \"xx_mem:state=broken\", :domain => \"ec2.int.com\"\r\n```\r\n\r\n## tag\r\n\r\nDefinition:\r\n\r\n`tag(role, params)`\r\n\r\n### role\r\n\r\nCapistrano role paramter(:app, :web, :db)\r\n\r\n### params\r\n\r\nExample:\r\n\r\n```ruby\r\ntag :dbm, :deployment => 12345, :name_prefix => \"db\", :tags => \"xx_db:role=master\", :primary => true\r\ntag :dbs, :deployment => 12345, :tags => [\"xx_db:role=slave\", \"xx_db:master\"]   # matching tag \"xx_db:master=<master_ip>\"\r\n```\r\n\r\n## Output message\r\n\r\nTo suppress output as possible(-v option):\r\n\r\n```sh\r\n$ cap -v shell\r\n$ cap -v invoke COMMAND='cat /var/log/httpd/access_log' 2>/tmp/collect_httpd_access_log\r\n```\r\n\r\n## Contributing to cap-rightscale\r\n\r\n* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet\r\n* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it\r\n* Fork the project\r\n* Start a feature/bugfix branch\r\n* Commit and push until you are happy with your contribution\r\n* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.\r\n* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.\r\n\r\n## Copyright\r\n\r\nCopyright (c) 2011 Satoshi Ohki. See LICENSE.txt for\r\nfurther details.\r\n\r\n"}